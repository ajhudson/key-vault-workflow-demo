name: Get Secrets from Key Vault

on:
  workflow_dispatch:

jobs:
  get-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Create Credentials Object
        shell: pwsh
        run: |
          $CredentialDetails = @{
            clientSecret = "${{ secrets.AZ_CLIENT_SECRET }}"
            subscriptionId = "${{ vars.AZ_SUBSCRIPTION_ID }}"
            tenantId = "${{ vars.AZ_TENANT_ID }}"
            clientId = "${{ vars.AZ_CLIENT_ID }}"
          }

          $CredentialsJson = $CredentialDetails | ConvertTo-Json

          Write-Output "AZ_CREDENTIALS<<EOF" >> $env:GITHUB_ENV
          Write-Output $CredentialsJson >> $env:GITHUB_ENV
          Write-Output "EOF" >> $env:GITHUB_ENV

      - name: Login via Az module
        uses: azure/login@v1
        with:
          creds: ${{ env.AZ_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Install PS AZ Module
        shell: pwsh
        run: |
          Install-Module -Name Az -Repository PSGallery -Force

      - name: Get Key Vault Secrets
        shell: pwsh
        id: kv-secrets
        run: |
          $KeyVaultName = "github-keyvault-kv"
          $SecretNamesList = "my-secret,another-secret,nonexisting-secret"

          $SecretNamesList -split ',' | ForEach-Object {
              $SecretValue = Get-AzKeyVaultSecret -VaultName $KeyVaultName -Name $_ -AsPlainText
              $SecretValue

              if ($null -ne $SecretValueText)
              {
                  Write-Output "$_=$SecretValue" | Out-File $env:GITHUB_OUTPUT -Append
              }
          }

      - name: Show Secrets
        shell: pwsh
        run: |
          Write-Output "my-secret: ${{ steps.kv-secrets.outputs.my-secret }}"
          Write-Output "another-secret: ${{ steps.kv-secrets.outputs.another-secret }}"
